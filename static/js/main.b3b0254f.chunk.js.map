{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/Statistics.module.css","components/friend/Friend.module.css","components/container/Container.module.css","components/friendList/FriendList.module.css","components/transactionHistory/TransactionHistory.module.css","components/section/Section.js","components/container/Container.js","components/profile/defaultImage.jpg","components/profile/Profile.js","components/statistics/randomColor.js","components/statistics/Statistics.js","components/friend/defaultImage.jpg","components/friend/Friend.js","components/friendList/FriendList.js","components/transactionHistory/Transaction.js","components/transactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Section","children","Container","title","className","s","container","Profile","name","tag","location","avatar","defaultImage","stats","profile","description","src","alt","label","quantity","followers","views","likes","generateRandomColor","Math","round","random","Statistics","statistic","statList","map","stat","item","style","backgroundColor","randomColor","percentage","id","Friend","defaultImg","isOnline","status","width","FriendList","friends","friendList","friend","Transaction","type","amount","currency","TransactionHistory","items","transactionHistory","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3b0254f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3H386\",\"description\":\"Profile_description__1zktR\",\"avatar\":\"Profile_avatar__2PRhJ\",\"name\":\"Profile_name__2ingW\",\"tag\":\"Profile_tag__r2Ut-\",\"location\":\"Profile_location__Oo5KM\",\"stats\":\"Profile_stats__Yzdvz\",\"label\":\"Profile_label__2uJJ9\",\"quantity\":\"Profile_quantity__3WUgk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistics_statistic__1h19w\",\"title\":\"Statistics_title__2GINO\",\"statList\":\"Statistics_statList__2lTyM\",\"item\":\"Statistics_item__8zvJw\",\"label\":\"Statistics_label__39cXM\",\"percentage\":\"Statistics_percentage__2bzsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Friend_status__1lCSJ\",\"avatar\":\"Friend_avatar__17OkT\",\"name\":\"Friend_name__1D9sQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2zKiA\",\"title\":\"Container_title__3rmWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2Qm6E\",\"item\":\"FriendList_item__kgHh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1szi7\"};","\nimport PropTypes from 'prop-types';\n\nfunction Section({ children }) {\n  return <section>{children}</section>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import s from '../container/Container.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","export default __webpack_public_path__ + \"static/media/defaultImage.ecd8a562.jpg\";","import s from '../profile/Profile.module.css';\nimport PropTypes from 'prop-types';\nimport defaultImage from '../profile/defaultImage.jpg';\n\nconst Profile = ({\n  name,\n  tag,\n  location,\n  avatar = defaultImage,\n  stats\n}) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes:PropTypes.number.isRequired\n  }).isRequired,\n};\n\nexport default Profile;\n"," function generateRandomColor() {\r\n    let r = Math.round((Math.random() * 255)); //red 0 to 255\r\n    let g = Math.round((Math.random() * 255)); //green 0 to 255\r\n    let b = Math.round((Math.random() * 255)); //blue 0 to 255\r\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\r\n};\r\n\r\nexport default generateRandomColor;","import s from '../statistics/Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport randomColor from '../statistics/randomColor';\r\n\r\n\r\nfunction Statistics({ title, stats }) {\r\n    return (\r\n        <section className={s.statistic}>\r\n            \r\n            {title && <>                \r\n                <h2 className={s.title}>{title}</h2>               \r\n                <ul className={s.statList}>\r\n                \r\n                    {stats.map(stat => (\r\n                                   \r\n                        <li key={stat.id} className={s.item} style={{ backgroundColor: randomColor() }}>\r\n                   \r\n                            <span className={s.label}>{stat.label}</span>\r\n                            <span className={s.percentage}>{stat.percentage}%</span>\r\n                        </li>             \r\n                    ))}               \r\n                </ul>\r\n            </>}\r\n        </section>  \r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label:PropTypes.string.isRequired,\r\n        percentage:PropTypes.number.isRequired\r\n    })).isRequired,\r\n}\r\n\r\n\r\nexport default Statistics;\r\n\r\n","export default __webpack_public_path__ + \"static/media/defaultImage.ecd8a562.jpg\";","import s from '../friend/Friend.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport defaultImg from '../friend/defaultImage.jpg';\r\n\r\n\r\nfunction Friend({\r\n    avatar = defaultImg,\r\n    name,\r\n    isOnline,\r\n}) {\r\n    return (        \r\n        <>\r\n            <> {isOnline\r\n                ? <span className={s.status} style={{ backgroundColor: '#2ECC71' }}></span>\r\n                :<span className={s.status} style={{backgroundColor:'#FF5733'}}></span>\r\n            }\r\n         </>           \r\n              \r\n            {/* <span className={s.status}\r\n                {isOnline ? className = { s.statusOk } : className = { s.statusNo }}\r\n            \r\n                > </span> */}\r\n                \r\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.name}>{name}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nFriend.propTypes = {    \r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n}\r\nexport default Friend;","\r\nimport PropTypes from 'prop-types';\r\nimport Friend from '../friend/Friend';\r\nimport s from '../friendList/FriendList.module.css';\r\n\r\nfunction FriendList({ friends }) {\r\n\r\n    return (\r\n        <ul className={s.friendList}>\r\n           \r\n         {friends.map(friend => (\r\n             <li key={friend.id} className = {s.item}>\r\n                <Friend\r\n                avatar = {friend.avatar}\r\n                name = {friend.name}\r\n                isOnline = {friend.isOnline}\r\n                 />\r\n             </li>            \r\n            ))}  \r\n        </ul>\r\n    );\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n}\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\n\r\nfunction Transaction({\r\n    type,\r\n    amount,\r\n    currency,    \r\n}) {\r\n    return (\r\n        <>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n        </>\r\n    );\r\n}\r\n\r\nTransaction.propTypes = {  \r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default Transaction;","import Transaction from '../transactionHistory/Transaction';\r\nimport s from '../transactionHistory/TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>      \r\n          \r\n      <tbody>\r\n        {items.map(item => (\r\n          \r\n          <tr key={item.id}>\r\n            <Transaction\r\n              type={item.type}\r\n              amount={item.amount}\r\n              currency={item.currency}\r\n            />              \r\n          </tr>\r\n          \r\n        ))}\r\n\r\n      </tbody>      \r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired    \r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Section from './components/section/Section';\nimport Container from './components/container/Container';\nimport Profile from './components/profile/Profile';\nimport Statistics from './components/statistics/Statistics';\nimport FriendList from './components/friendList/FriendList';\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\n\nimport './App.css';\n\nimport user from './components/profile/user.json';\nimport statisticalData from './components/statistics/statistical-data.json';\nimport friends from './components/friendList/friends.json';\nimport transactions from './components/transactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Section>\n\n        <Container title=\"Задание 1 - Профиль социальной сети\">\n          <Profile\n            name={user.name}\n            tag={user.tag}\n            location={user.location}\n            avatar={user.avatar}\n            stats={user.stats}\n          />\n        </Container>\n     \n     \n        <Container title=\"Задание 2 - Секция статистики\">          \n          <Statistics\n            title=\"Upload stats\"\n            stats={statisticalData}\n          />\n          <Statistics\n            stats={statisticalData}\n          />\n        </Container>\n      \n      \n        <Container title=\"Задание 3 - Список друзей\">          \n          <FriendList\n            friends={friends}\n          />          \n        </Container>\n     \n        <Container title=\"Задание 4 - История транзакций\">\n          <TransactionHistory items={transactions} />\n        </Container>\n     \n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}